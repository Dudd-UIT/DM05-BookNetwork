name: BSN Backend API Pipeline

on:
  push:
    branches:
      - ci/cd-pipeline
    paths:
      - book-network/**
      - docker/backend/**
      - 'docker-compose.yml'
      - .github/workflows/*-backend.yml

jobs:
  compile:
    runs-on: ubuntu
    name: Compile project
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
  # Khi fetch-depth: 0, nó sẽ tải toàn bộ lịch sử commit của repository, 
  # thay vì chỉ tải một commit mới nhất (default là 1).

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Compile project
        run: |
          cd book-network
          ./mvnw clean compile

  unit-tests:
    runs-on: ubuntu
    name: Unit tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Running Unit Tests
        run: |
          cd book-network
          ./mvnw clean test

  build:
    runs-on: ubuntu
    name: Build backend
    needs: [compile, unit-tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Compile project
        run: |
          cd book-network
          ./mvnw clean compile

  build-image:
   name: Build Docker Image
   runs-on: ubuntu
   needs: [build]
   steps:
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
    
      # id là một cách đặt tên cho một bước, giúp bạn dễ dàng tham chiếu tới nó ở các bước sau.
      - name: Extract project version
        id: extract_version 
        run: |
          cd book-network
          echo "VERSION=$(./mvnw -q -Dexec.executable='echo -Dexec.args='${project.version} --non-recursive exec:exec)" >> $GITHUB_OUTPUT
      # GITHUB_OUTPUT: Biến môi trường dùng để lưu kết quả từ các bước của workflow để sử dụng trong các bước sau.

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with: 
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: book-network
          file: docker/backend/Dockerfile
          push: true
          platform: linux/amd64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bsn-api:${{ steps.extract_version.outputs.VERSION }},${{ secrets.DOCKERHUB_USERNAME }}/bsn-api:latest
          build-args:
            PROFILE=dev
            APP_VERSION=${{steps.extract_version.outputs.VERSION}}
  
  deploy:
    name: Deploy Backend
    runs-on: ubuntu
    needs: [build-image]
    steps:

      - name: Create deployment folder
        run: ssh ${{secrets.VPS_USERNAME}}@${{secrets.VPS_IP}} "mkdir -p ci-cd"

      - name: Copy docker-compose file
        run: scp -oStrictHostKeyChecking=no docker-compose.yml ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }}:ci-cd/docker-compose.yml

    # Tất cả các lệnh nằm giữa <<EOF và EOF sẽ được thực thi liên tục khi bạn chạy chúng
      - name: Set ENV variable and deploy
        run: |
          ssh ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }} <<EOF
          export EMAIL_HOST_NAME=${{ secrets.EMAIL_HOST_NAME }}
          export EMAIL_USER_NAME=${{ secrets.EMAIL_USER_NAME }}
          export EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}
          cd ci-cd
          docker compose -f docker-compose.yml pull -q
          docker compose -f docker-compose.yml up -d
          EOF

    #  Tải về các image Docker được chỉ định trong tệp docker-compose.yml
